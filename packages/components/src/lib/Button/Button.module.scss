.ButtonBase {
  position: relative;
  display: inline-flex;
  justify-content: center;
  outline: 3px solid transparent;
  outline-offset: 3px;

  &:not(:disabled) {
    cursor: pointer;
  }

  &.Loading {
    cursor: wait;
  }

  &:disabled:not(.Loading) {
    cursor: not-allowed;
  }
}

.ButtonLike {
  --border-radius: 0.25em;
  border-radius: var(--border-radius);
  font-weight: 500;
  // font-weight: 600;
  letter-spacing: 0.025em;
}

.Link {
  --color-light-default: hsl(var(--c-1-25));
  --color-light-hover: hsl(var(--c-1-10));
  --color-dark-default: hsl(var(--c-1-90));
  --color-dark-hover: hsl(var(--c-1-100));
  --color: var(--color-light-default);

  color: var(--color);
  transition-property: color;
  transition-duration: var(--duration-1);

  &:not(:disabled):hover,
  &:not(:disabled):focus-visible {
    --color: var(--color-light-hover);
  }

  @media (prefers-color-scheme: dark) {
    & {
      --color: var(--color-dark-default);

      &:not(:disabled):hover,
      &:not(:disabled):focus-visible {
        --color: var(--color-dark-hover);
      }
    }
  }
}

.Outlined {
  --color-light-default: hsl(var(--c-1-25));
  --color-light-hover: hsl(var(--c-1-10));
  --color-dark-default: hsl(var(--c-1-90));
  --color-dark-hover: hsl(var(--c-1-100));
  --color: var(--color-light-default);

  --background-light-hover: hsla(var(--c-1-90) / 0.25);
  --background-dark-hover: hsla(var(--c-1-30) / 0.25);

  color: var(--color);
  transition-property: background-color, color, outline;
  transition-duration: var(--duration-1);
  font-weight: 700;

  &:not(:disabled):hover,
  &:not(:disabled):focus-visible {
    --color: var(--color-light-hover);
    background-color: var(--background-light-hover);
  }

  @media (prefers-color-scheme: dark) {
    & {
      --color: var(--color-dark-default);

      &:not(:disabled):hover,
      &:not(:disabled):focus-visible {
        --color: var(--color-dark-hover);
        background-color: var(--background-dark-hover);
      }
    }
  }
}

.Filled {
  --color-light-default: hsl(var(--c-0-95));
  --color-light-hover: hsl(var(--c-0-100));
  --color-light-disabled: hsl(var(--c-0-40));
  --color-dark-default: hsl(var(--c-0-95));
  --color-dark-hover: hsl(var(--c-0-100));
  --color-dark-disabled: hsl(var(--c-1-70));

  --background-light-default: hsl(var(--c-1-25));
  --background-light-hover: hsl(var(--c-1-15));
  --background-light-disabled: hsl(var(--c-1-95));
  --background-dark-default: hsl(var(--c-1-25));
  --background-dark-hover: hsl(var(--c-1-30));
  --background-dark-disabled: hsl(var(--c-1-20));

  --color: var(--color-light-default);
  --background-color: var(--background-light-default);

  color: var(--color);
  background-color: var(--background-color);
  transition-property: color, background-color, box-shadow, outline;
  transition-duration: var(--duration-1);
  font-weight: 700;

  &:disabled {
    --color: var(--color-light-disabled);
    --background-color: var(--background-light-disabled);
  }

  &:focus-visible {
    // outline: 3px solid var(--background-color);
    // outline-offset: 3px;
    outline-color: var(--background-color);

    @media (prefers-color-scheme: dark) {
      & {
        outline-color: hsl(var(--c-1-35));
      }
    }
  }

  &:not(:disabled):hover,
  &:not(:disabled):focus-visible {
    --color: var(--color-light-hover);
    --background-color: var(--background-light-hover);
  }

  @media (prefers-color-scheme: dark) {
    & {
      --color: var(--color-dark-default);
      --background-color: var(--background-dark-default);

      &:disabled {
        --color: var(--color-dark-disabled);
        --background-color: var(--background-dark-disabled);
      }

      &:not(:disabled):hover,
      &:not(:disabled):focus-visible {
        --color: var(--color-dark-hover);
        --background-color: var(--background-dark-hover);
      }
    }
  }
}

.Label {
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.Small {
  padding-inline: 1.7rem;
  padding-block: 0.7rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}
